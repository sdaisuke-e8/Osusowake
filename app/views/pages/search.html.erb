<%= render "partial/navbar" %>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
          <!-- Search Result -->
          <div id="search-result" class="row-space-top-4">
            <%= render 'list' %>
          </div>
        </div>

        <div class="col-md-6">
            <div id="map" style="height: 500px;">
            </div>
        </div>
    </div>
</div>

<script>
function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat:<%= @latitude %>, lng: <%= @longitude %>},
    zoom: 13
  });
  var input = /** @type {!HTMLInputElement} */(
      document.getElementById('pac-input'));

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);

  // マーカーとインフォウィンドウの配列を用意
  markers = [];
  infowindows = [];

  <% @listings.each do |listing| %>

    //markerはこの関数の中で同じ変数
    var marker = new google.maps.Marker({
      // おそらくlisting.latitudeの部分でエラーが発生している
      position: new google.maps.LatLng(<%= listing.latitude %>, <%= listing.longitude %>),
      map: map
    });

    // マーカー配列にマーカを保存
    markers.push(marker);

  <% end %>

  var infowindow = new google.maps.InfoWindow();
  autocomplete.addListener('place_changed', function() {

    // すべてのinfowindowを消す
    infowindows.forEach(function(infowindow) {
      infowindow.close();
    });
    infowindows = [];

    // すべてのmarkerを消す
    markers.forEach(function(marker) {
      marker.setVisible(false);
    });
    markers = [];

    var place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("指定の場所が見つかりません");
      return;
    }

    // If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
      map.setZoom(13);  // Why 17? Because it looks good.
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(13);  // Why 17? Because it looks good.
    }

    // 入力欄の場所の緯度経度情報を取得
    var lat = place.geometry.location.lat();
    var lng = place.geometry.location.lng();

    // 緯度経度情報をまとめる
    var geolocation = [lat, lng];

    // 場所の住所
    var location = place.formatted_address;

    // autocompleteの入力欄が変更されたらurlも変更して履歴を残す
    url = "/search?utf8=✓&search="+place.formatted_address;

    window.history.pushState(null,null,url);

    $.ajax({
      url: '/ajaxsearch',
        // this data is data for sending to url
        data: {'geolocation': geolocation}
    });

  });
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAQpt9HosBNr4ToKp5diw2SNymRvH0V8q8&signed_in=true&libraries=places&callback=initMap"
    async defer></script>
